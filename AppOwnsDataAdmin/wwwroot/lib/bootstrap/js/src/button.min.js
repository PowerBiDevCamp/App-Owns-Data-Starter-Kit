/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/bootstrap@4.6.0/js/src/button.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import $ from"jquery";const NAME="button",VERSION="4.6.0",DATA_KEY="bs.button",EVENT_KEY=".bs.button",DATA_API_KEY=".data-api",JQUERY_NO_CONFLICT=$.fn[NAME],CLASS_NAME_ACTIVE="active",CLASS_NAME_BUTTON="btn",CLASS_NAME_FOCUS="focus",SELECTOR_DATA_TOGGLE_CARROT='[data-toggle^="button"]',SELECTOR_DATA_TOGGLES='[data-toggle="buttons"]',SELECTOR_DATA_TOGGLE='[data-toggle="button"]',SELECTOR_DATA_TOGGLES_BUTTONS='[data-toggle="buttons"] .btn',SELECTOR_INPUT='input:not([type="hidden"])',SELECTOR_ACTIVE=".active",SELECTOR_BUTTON=".btn",EVENT_CLICK_DATA_API="click.bs.button.data-api",EVENT_FOCUS_BLUR_DATA_API="focus.bs.button.data-api blur.bs.button.data-api",EVENT_LOAD_DATA_API="load.bs.button.data-api";class Button{constructor(t){this._element=t,this.shouldAvoidTriggerChange=!1}static get VERSION(){return"4.6.0"}toggle(){let t=!0,e=!0;const s=$(this._element).closest(SELECTOR_DATA_TOGGLES)[0];if(s){const a=this._element.querySelector(SELECTOR_INPUT);if(a){if("radio"===a.type)if(a.checked&&this._element.classList.contains("active"))t=!1;else{const t=s.querySelector(".active");t&&$(t).removeClass("active")}t&&("checkbox"!==a.type&&"radio"!==a.type||(a.checked=!this._element.classList.contains("active")),this.shouldAvoidTriggerChange||$(a).trigger("change")),a.focus(),e=!1}}this._element.hasAttribute("disabled")||this._element.classList.contains("disabled")||(e&&this._element.setAttribute("aria-pressed",!this._element.classList.contains("active")),t&&$(this._element).toggleClass("active"))}dispose(){$.removeData(this._element,DATA_KEY),this._element=null}static _jQueryInterface(t,e){return this.each((function(){const s=$(this);let a=s.data(DATA_KEY);a||(a=new Button(this),s.data(DATA_KEY,a)),a.shouldAvoidTriggerChange=e,"toggle"===t&&a[t]()}))}}$(document).on(EVENT_CLICK_DATA_API,'[data-toggle^="button"]',(t=>{let e=t.target;const s=e;if($(e).hasClass("btn")||(e=$(e).closest(".btn")[0]),!e||e.hasAttribute("disabled")||e.classList.contains("disabled"))t.preventDefault();else{const a=e.querySelector(SELECTOR_INPUT);if(a&&(a.hasAttribute("disabled")||a.classList.contains("disabled")))return void t.preventDefault();"INPUT"!==s.tagName&&"LABEL"===e.tagName||Button._jQueryInterface.call($(e),"toggle","INPUT"===s.tagName)}})).on(EVENT_FOCUS_BLUR_DATA_API,'[data-toggle^="button"]',(t=>{const e=$(t.target).closest(".btn")[0];$(e).toggleClass("focus",/^focus(in)?$/.test(t.type))})),$(window).on(EVENT_LOAD_DATA_API,(()=>{let t=[].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLES_BUTTONS));for(let e=0,s=t.length;e<s;e++){const s=t[e],a=s.querySelector(SELECTOR_INPUT);a.checked||a.hasAttribute("checked")?s.classList.add("active"):s.classList.remove("active")}t=[].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE));for(let e=0,s=t.length;e<s;e++){const s=t[e];"true"===s.getAttribute("aria-pressed")?s.classList.add("active"):s.classList.remove("active")}})),$.fn[NAME]=Button._jQueryInterface,$.fn[NAME].Constructor=Button,$.fn[NAME].noConflict=()=>($.fn[NAME]=JQUERY_NO_CONFLICT,Button._jQueryInterface);export default Button;
//# sourceMappingURL=/sm/db3d18b2646c694debf11b6e49cb71f128d9ff735b40ace8e60d042cb44d80c4.map